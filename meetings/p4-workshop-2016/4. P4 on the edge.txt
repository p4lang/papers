In this talk we discuss the use of P4 to concisely define the requirements of the network data plane implemented in a standard edge server. The edge is unique in both the services it runs and in the flexibility provided by a general purpose CPU compared to currently available network components. In this talk we show how to express common edge network configurations using P4 as well as highlight programs where we had to make heavy use of external functionality using 'extern' semantics. To achieve this we have created a development environment which uses P4/LLVM/eBPF to implement the P4 specification and run it on a standard server using an open source Linux operating system. For this talk we target a container use cases but expect the development environment can be made independent of virtualization technology with some effort. The result of this work is a well-defined programming language coupled with LLVM that can be used to create programmable data plane on the network edge. Future work in this area includes augmenting the software data plane with hardware assists, language optimizations, formal verification and validation.
